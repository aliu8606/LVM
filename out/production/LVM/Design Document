//Superclass Volume
String name: name of volume
int size: size of volume in G
UUID uuid: the UUID of the volume

Constructor: parameters String name, int size
initializes all three variables.
initializes the uuid with the generateUUID method.

getter methods for all three variables

setter method for size

UUID generateUUID: generates a uuid and returns it



//Class Drive
String name: name of the hard drive
int size = size of the hard drive

Constructor: parameters String name, int size
initializes both variables

getter methods for both variables

String toString: returns the name and size of the drive



//Subclass PV
Drive drive: associated hard drive of the physical volume
VG vg: associated volume group of the physical volume

Constructor: parameters String name, Drive drive
uses the super constructor to initialize the name, size from the drive, and uuid
initializes the drive to parameter and vg to null

getter methods for both variables

setter method for vg

String toString: returns the PV name with size, vg if it exists, and uuid




//Subclass VG
ArrayList<PV> pVList: list of physical volumes the volume group has
ArrayList<LV> lVList: list of logical volumes the volume group has
int freeSpace: the total free space it has (total PV - total LV)

Constructor: parameters String name, PV pv
uses the super constructor to initialize the name, size from PV, and uuid
adds PV to pVList, sets that PV's vg to this VG instance
initializes freeSpace to PV size and lVList to an empty list

getter methods for all three variables

void extend: parameters PV pv
adds pv to pVList
sets pv's VG to this VG
updates freeSpace and size to include pv's size

void addLV: parameters LV lv
adds lv to lVList
updates freeSpace to decrease by lv's size

String toString: returns VG name,
with size and freeSpace, list of PVs and uuid



//Subclass LV
VG vg: associated volume group of the logical volume

Constructor: parameters String name, int size, VG vg
uses super constructor to initialize name, size, uuid
initalizes vg to parameter vg
calls addLV to add LV to the vg

getter method for vg

String toString: returns LV name
with size, associated VG, and uuid




//class notRunner
ArrayList<Drive> drives: list of drives created
ArrayList<PV> pvs: list of physical volumes created
ArrayList<VG> vgs: list of volume groups created
ArrayList<LV> lvs: list of logical volumes created

String createDrive: parameters String name, int size
calls checkList to see if drive with name is already installed
if so, stop and report an error
else, creates a Drive with parameters, adds this Drive to drives list
and returns a success message

String createPV: parameters String name, String driveName
iterates through list drives to check if a drive with driveName as name exists
if so, call checkDrive to make sure the drive can be used
and call checkList to see if parameter name is unique
if yes, construct a PV with name and that drive
and add this PV to pvs list
and return a success message
if not, stop and report an error

String createVG: parameters String name, String pvName
iterates through list pvs to check if a pv with pvName as name exists
if so, call checkPV to make sure the PV can be added
and call checkList to see if parameter name is unique
if yes, construct a VG with name and that PV
and adds this VG to vgs
and return a success message
if not, stop and report an error

String extendVG: parameters String vgName, String pvName
iterates through vgs list to check if a VG with name vgName exists
if so, iterate through pvs list to check if a PV with name pvName exists
if yes, call checkPV to check if PV can be added
and call extend method with that VG and that PV
and return a success message
otherwise, stop and report an error

String createLV: parameters String name, int size, String vgName
iterates through vgs list to check if a VG with name vgName exists
if so, calls checkVG to see if VG can be modified
and calls checkList to see if parameter name is unique
if yes, creates LV with parameters and adds LV to lvs
else, stop and report an error

void printDrives: prints information of each Drive in drives

void printPVs: calls sortByVG to sort pvs,
and prints information of each PV in pvs

void printVG: prints information of each VG

void printLV: calls sortByVG to sort lvs,
and prints information of each LV in lvs

boolean checkList: parameters String name, String type
iterates through type list to see if a type with name the same as parameter name exists
returns true if so, false otherwise

boolean checkDrive: parameters Drive drive
checks to make sure the drive does not belong to another PV
returns true if it doesn't, false otherwise

boolean checkPV: parameters PV pv
checks if inputted PV does not belong to another VG
returns true if it doesn't, false otherwise

boolean checkVG: parameters VG vg int size
checks if inputted VG's freeSpace >= parameter size
returns true if it does, false otherwise

void sortByVG: parameter String type
sorts type (either PV or LV) list by VG using insertion sort

int compare: parameters PV pv1, PV pv2
helper method for sortByVG
returns -1 if either PV does not have a VG
otherwise, returns compareTo on the names of the vgs of the parameter PVs

int compare: parameters LV lv1, LV lv2
helper method for sortByVG
returns compareTo on the names of the vgs of the parameter LVs




//class Runner
-constructs a notRunner instance
-prints welcome message
-prompts the user for command
-for each command, execute corresponding method from notRunner
-while command is not 'exit', repeat last two steps